// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        (unknown)
// source: config.proto

package configpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductionType int32

const (
	ProductionType_ProductionType_UNKNOWN ProductionType = 0
	ProductionType_VEIN_HARVESTED         ProductionType = 1
	ProductionType_LIQUID_HARVESTED       ProductionType = 2
	ProductionType_OIL_HARVESTED          ProductionType = 3
	ProductionType_ORBIT_HARVESTED        ProductionType = 4
	ProductionType_SMELTED                ProductionType = 5
	ProductionType_ASSEMBLED              ProductionType = 6
	ProductionType_REFINED                ProductionType = 7
	ProductionType_CHEMICAL               ProductionType = 8
	ProductionType_RESEARCHED             ProductionType = 9
	ProductionType_COLLIDED               ProductionType = 10
	ProductionType_BURNED                 ProductionType = 11 // Chemical fuel -> power
	ProductionType_NUCLEAR                ProductionType = 12 // Nuclear fuel -> power
)

// Enum value maps for ProductionType.
var (
	ProductionType_name = map[int32]string{
		0:  "ProductionType_UNKNOWN",
		1:  "VEIN_HARVESTED",
		2:  "LIQUID_HARVESTED",
		3:  "OIL_HARVESTED",
		4:  "ORBIT_HARVESTED",
		5:  "SMELTED",
		6:  "ASSEMBLED",
		7:  "REFINED",
		8:  "CHEMICAL",
		9:  "RESEARCHED",
		10: "COLLIDED",
		11: "BURNED",
		12: "NUCLEAR",
	}
	ProductionType_value = map[string]int32{
		"ProductionType_UNKNOWN": 0,
		"VEIN_HARVESTED":         1,
		"LIQUID_HARVESTED":       2,
		"OIL_HARVESTED":          3,
		"ORBIT_HARVESTED":        4,
		"SMELTED":                5,
		"ASSEMBLED":              6,
		"REFINED":                7,
		"CHEMICAL":               8,
		"RESEARCHED":             9,
		"COLLIDED":               10,
		"BURNED":                 11,
		"NUCLEAR":                12,
	}
)

func (x ProductionType) Enum() *ProductionType {
	p := new(ProductionType)
	*p = x
	return p
}

func (x ProductionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductionType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[0].Descriptor()
}

func (ProductionType) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[0]
}

func (x ProductionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductionType.Descriptor instead.
func (ProductionType) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

type Recipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // optional, inferred from result by default
	Result []*ItemQuantity `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	Input  []*ItemQuantity `protobuf:"bytes,3,rep,name=input,proto3" json:"input,omitempty"`
	// Types that are assignable to Timing:
	//	*Recipe_Duration
	//	*Recipe_PerMinute
	//	*Recipe_PerSecond
	Timing isRecipe_Timing `protobuf_oneof:"timing"`
	Type   ProductionType  `protobuf:"varint,7,opt,name=type,proto3,enum=factorysolver.ProductionType" json:"type,omitempty"`
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

func (x *Recipe) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Recipe) GetResult() []*ItemQuantity {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Recipe) GetInput() []*ItemQuantity {
	if x != nil {
		return x.Input
	}
	return nil
}

func (m *Recipe) GetTiming() isRecipe_Timing {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (x *Recipe) GetDuration() *Duration {
	if x, ok := x.GetTiming().(*Recipe_Duration); ok {
		return x.Duration
	}
	return nil
}

func (x *Recipe) GetPerMinute() float64 {
	if x, ok := x.GetTiming().(*Recipe_PerMinute); ok {
		return x.PerMinute
	}
	return 0
}

func (x *Recipe) GetPerSecond() float64 {
	if x, ok := x.GetTiming().(*Recipe_PerSecond); ok {
		return x.PerSecond
	}
	return 0
}

func (x *Recipe) GetType() ProductionType {
	if x != nil {
		return x.Type
	}
	return ProductionType_ProductionType_UNKNOWN
}

type isRecipe_Timing interface {
	isRecipe_Timing()
}

type Recipe_Duration struct {
	Duration *Duration `protobuf:"bytes,4,opt,name=duration,proto3,oneof"`
}

type Recipe_PerMinute struct {
	PerMinute float64 `protobuf:"fixed64,5,opt,name=per_minute,json=perMinute,proto3,oneof"`
}

type Recipe_PerSecond struct {
	PerSecond float64 `protobuf:"fixed64,6,opt,name=per_second,json=perSecond,proto3,oneof"`
}

func (*Recipe_Duration) isRecipe_Timing() {}

func (*Recipe_PerMinute) isRecipe_Timing() {}

func (*Recipe_PerSecond) isRecipe_Timing() {}

type ItemQuantity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item     string `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Quantity int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ItemQuantity) Reset() {
	*x = ItemQuantity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemQuantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemQuantity) ProtoMessage() {}

func (x *ItemQuantity) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemQuantity.ProtoReflect.Descriptor instead.
func (*ItemQuantity) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

func (x *ItemQuantity) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *ItemQuantity) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type Fuel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item   string         `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Joules int64          `protobuf:"varint,2,opt,name=joules,proto3" json:"joules,omitempty"`
	Type   ProductionType `protobuf:"varint,5,opt,name=type,proto3,enum=factorysolver.ProductionType" json:"type,omitempty"` // BURNED vs NUCLEAR
}

func (x *Fuel) Reset() {
	*x = Fuel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fuel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fuel) ProtoMessage() {}

func (x *Fuel) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fuel.ProtoReflect.Descriptor instead.
func (*Fuel) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{2}
}

func (x *Fuel) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *Fuel) GetJoules() int64 {
	if x != nil {
		return x.Joules
	}
	return 0
}

func (x *Fuel) GetType() ProductionType {
	if x != nil {
		return x.Type
	}
	return ProductionType_ProductionType_UNKNOWN
}

type Building struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ActiveWattsUsed int64          `protobuf:"varint,2,opt,name=active_watts_used,json=activeWattsUsed,proto3" json:"active_watts_used,omitempty"` // negative for generators
	IdleWattsUsed   int64          `protobuf:"varint,3,opt,name=idle_watts_used,json=idleWattsUsed,proto3" json:"idle_watts_used,omitempty"`
	Efficiency      float64        `protobuf:"fixed64,4,opt,name=efficiency,proto3" json:"efficiency,omitempty"`
	Type            ProductionType `protobuf:"varint,5,opt,name=type,proto3,enum=factorysolver.ProductionType" json:"type,omitempty"`
}

func (x *Building) Reset() {
	*x = Building{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Building) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Building) ProtoMessage() {}

func (x *Building) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Building.ProtoReflect.Descriptor instead.
func (*Building) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{3}
}

func (x *Building) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Building) GetActiveWattsUsed() int64 {
	if x != nil {
		return x.ActiveWattsUsed
	}
	return 0
}

func (x *Building) GetIdleWattsUsed() int64 {
	if x != nil {
		return x.IdleWattsUsed
	}
	return 0
}

func (x *Building) GetEfficiency() float64 {
	if x != nil {
		return x.Efficiency
	}
	return 0
}

func (x *Building) GetType() ProductionType {
	if x != nil {
		return x.Type
	}
	return ProductionType_ProductionType_UNKNOWN
}

type Bonus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       []ProductionType `protobuf:"varint,1,rep,packed,name=type,proto3,enum=factorysolver.ProductionType" json:"type,omitempty"`
	Multiplier float64          `protobuf:"fixed64,2,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
}

func (x *Bonus) Reset() {
	*x = Bonus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bonus) ProtoMessage() {}

func (x *Bonus) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bonus.ProtoReflect.Descriptor instead.
func (*Bonus) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{4}
}

func (x *Bonus) GetType() []ProductionType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Bonus) GetMultiplier() float64 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe     []*Recipe   `protobuf:"bytes,1,rep,name=recipe,proto3" json:"recipe,omitempty"`
	Fuel       []*Fuel     `protobuf:"bytes,2,rep,name=fuel,proto3" json:"fuel,omitempty"`
	Building   []*Building `protobuf:"bytes,3,rep,name=building,proto3" json:"building,omitempty"`
	Efficiency []*Bonus    `protobuf:"bytes,4,rep,name=efficiency,proto3" json:"efficiency,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{5}
}

func (x *Config) GetRecipe() []*Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

func (x *Config) GetFuel() []*Fuel {
	if x != nil {
		return x.Fuel
	}
	return nil
}

func (x *Config) GetBuilding() []*Building {
	if x != nil {
		return x.Building
	}
	return nil
}

func (x *Config) GetEfficiency() []*Bonus {
	if x != nil {
		return x.Efficiency
	}
	return nil
}

type Duration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seconds int32 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Millis  int32 `protobuf:"varint,2,opt,name=millis,proto3" json:"millis,omitempty"`
}

func (x *Duration) Reset() {
	*x = Duration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Duration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Duration) ProtoMessage() {}

func (x *Duration) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Duration.ProtoReflect.Descriptor instead.
func (*Duration) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{6}
}

func (x *Duration) GetSeconds() int32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Duration) GetMillis() int32 {
	if x != nil {
		return x.Millis
	}
	return 0
}

var File_config_proto protoreflect.FileDescriptor

var file_config_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x22, 0xba, 0x02,
	0x0a, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x00, 0x52, 0x09, 0x70, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x09, 0x70, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x31, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0x3e, 0x0a, 0x0c, 0x49, 0x74,
	0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x65, 0x0a, 0x04, 0x46, 0x75,
	0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x6f, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6a, 0x6f, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x31,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xc5, 0x01, 0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x61, 0x74,
	0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x61, 0x74, 0x74, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x64, 0x6c, 0x65, 0x57, 0x61, 0x74,
	0x74, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5a, 0x0a, 0x05, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x22, 0xcb, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12,
	0x27, 0x0a, 0x04, 0x66, 0x75, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x75,
	0x65, 0x6c, 0x52, 0x04, 0x66, 0x75, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a,
	0x0a, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x72, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65,
	0x6e, 0x63, 0x79, 0x22, 0x3c, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x2a, 0xec, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x56, 0x45, 0x49, 0x4e, 0x5f, 0x48, 0x41, 0x52, 0x56, 0x45, 0x53, 0x54,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x49, 0x51, 0x55, 0x49, 0x44, 0x5f, 0x48,
	0x41, 0x52, 0x56, 0x45, 0x53, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x49,
	0x4c, 0x5f, 0x48, 0x41, 0x52, 0x56, 0x45, 0x53, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x13, 0x0a,
	0x0f, 0x4f, 0x52, 0x42, 0x49, 0x54, 0x5f, 0x48, 0x41, 0x52, 0x56, 0x45, 0x53, 0x54, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4d, 0x45, 0x4c, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x53, 0x53, 0x45, 0x4d, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x48, 0x45, 0x4d, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x53,
	0x45, 0x41, 0x52, 0x43, 0x48, 0x45, 0x44, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4c,
	0x4c, 0x49, 0x44, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x55, 0x52, 0x4e, 0x45,
	0x44, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x55, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x10, 0x0c,
	0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x61, 0x70, 0x74, 0x72, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2d, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_proto_rawDescOnce sync.Once
	file_config_proto_rawDescData = file_config_proto_rawDesc
)

func file_config_proto_rawDescGZIP() []byte {
	file_config_proto_rawDescOnce.Do(func() {
		file_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_proto_rawDescData)
	})
	return file_config_proto_rawDescData
}

var file_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_config_proto_goTypes = []interface{}{
	(ProductionType)(0),  // 0: factorysolver.ProductionType
	(*Recipe)(nil),       // 1: factorysolver.Recipe
	(*ItemQuantity)(nil), // 2: factorysolver.ItemQuantity
	(*Fuel)(nil),         // 3: factorysolver.Fuel
	(*Building)(nil),     // 4: factorysolver.Building
	(*Bonus)(nil),        // 5: factorysolver.Bonus
	(*Config)(nil),       // 6: factorysolver.Config
	(*Duration)(nil),     // 7: factorysolver.Duration
}
var file_config_proto_depIdxs = []int32{
	2,  // 0: factorysolver.Recipe.result:type_name -> factorysolver.ItemQuantity
	2,  // 1: factorysolver.Recipe.input:type_name -> factorysolver.ItemQuantity
	7,  // 2: factorysolver.Recipe.duration:type_name -> factorysolver.Duration
	0,  // 3: factorysolver.Recipe.type:type_name -> factorysolver.ProductionType
	0,  // 4: factorysolver.Fuel.type:type_name -> factorysolver.ProductionType
	0,  // 5: factorysolver.Building.type:type_name -> factorysolver.ProductionType
	0,  // 6: factorysolver.Bonus.type:type_name -> factorysolver.ProductionType
	1,  // 7: factorysolver.Config.recipe:type_name -> factorysolver.Recipe
	3,  // 8: factorysolver.Config.fuel:type_name -> factorysolver.Fuel
	4,  // 9: factorysolver.Config.building:type_name -> factorysolver.Building
	5,  // 10: factorysolver.Config.efficiency:type_name -> factorysolver.Bonus
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemQuantity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fuel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Building); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bonus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Duration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_config_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Recipe_Duration)(nil),
		(*Recipe_PerMinute)(nil),
		(*Recipe_PerSecond)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		EnumInfos:         file_config_proto_enumTypes,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_rawDesc = nil
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
}
